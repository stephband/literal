{
  "version": 3,
  "sources": ["../../modules/dom/assign-dataset.js", "https://cdn.jsdelivr.net/gh/stephband/fn@master/modules/cache-by-key.js", "../../modules/request-data.js", "../../literal-html/element.js"],
  "sourcesContent": ["\nfunction parseData(value) {\n    try {\n        return JSON.parse(value);\n    }\n    catch(e) {\n        return value;\n    }\n}\n\nexport default function assignDataset(object, dataset) {\n    const keys   = Object.keys(dataset);\n    const values = Object.values(dataset);\n\n    return values\n    .map(parseData)\n    .reduce((object, value, i) => (object[keys[i]] = value, object), object);\n}\n", "/**\ncacheByKey(fn)\nReturns a function that caches the output values of `fn(input)` against input\nvalues, which are registered as keys in an object, such that for each input\nkey `fn` is only ever called once.\n*/\n\nlet warned;\n\nexport default function cacheByKey(fn) {\n    var map = {};\n\n    return function cache(input) {\n        /*if (window.DEBUG && !warned && input === undefined) {\n            warned = true;\n            console.warn('cacheByKey() called with undefined. Not illegal, but potentially bad.');\n        }\n\n        if (window.DEBUG && typeof input !== 'string' && typeof input !== 'number') {\n            console.warn('cacheByKey() called with non-primitive input, coerced to string \"' + input + '\"');\n        }*/\n\n        if (window.DEBUG && arguments.length > 1) {\n            console.warn('cacheByKey() called with ' + arguments.length + ' arguments. Accepts exactly 1.');\n        }\n\n        return input in map ?\n            map[input] :\n            map[input] = fn(input) ;\n    };\n}\n", "\n/**\nrequestData(url)\n\nTakes a `url` pointing to either a `.json` file (in which case it fetches and\nparses it) or a `.js` file (which it imports as a module), and returns a\npromise of the result.\n\n```\nrequestData('./path/to/data.json');\n```\n\nWhere a `url` to a module is a relative URL it is normalised to `window.location`\nso that imports written in templates are treated correctly (dynamic `import()`\nwould otherwise try and import relative to this module).\n\n```\nrequestData('./path/to/module.js');\n```\n\nBy default a module request imports the default export. If `url` contains a\n`#fragment` identifier, the named export corresponding to the identifier is\nimported.\n\n```\nrequestData('./path/to/module#named');\n```\n**/\n\n/*\nIf the fragment identifier is also post-fixed with parameters then that named\nexport is treated as a constructor function and called:\n\n```\nrequestData('./path/to/module#named(\"parameter\")');\n```\n\nTo construct a default export use the name `default`:\n\n```\nrequestData('./path/to/module#default(\"parameter\")');\n```\n*/\n\nimport get            from 'fn/get.js';\nimport overload       from 'fn/overload.js';\nimport cache          from 'fn/cache-by-key.js';\nimport { rewriteURL } from './urls.js';\n\nconst rextension = /\\.([\\w-]+)(?:#|\\?|$)/;\nconst empty      = [];\n\nconst request = overload((url) => (rextension.exec(url.pathname) || empty)[1], {\n    js: cache((url) => {\n        // Get named import from hash\n        const src  = url.origin + url.pathname + url.search;\n        const name = url.hash.slice(1) || 'default';\n        // Return promise of imported named module\n        return import(src).then(get(name));\n    }),\n\n    default: cache((url) => fetch(url).then((response) => {\n        if (!response.ok) {\n            throw new Error(`Literal failed to fetch data â€“ ${response.status}`);\n        }\n\n        return response.json();\n    }))\n});\n\nexport default function requestData(path) {\n    // Get rewritten URL\n    const url = rewriteURL(path);\n\n    // Return promise of data\n    return request(url);\n}\n", "\nimport id             from 'fn/id.js';\nimport noop           from 'fn/noop.js';\nimport assignDataset  from '../modules/dom/assign-dataset.js';\nimport requestData    from '../modules/request-data.js';\nimport Template       from '../modules/template.js';\nimport { printError } from '../modules/print.js';\nimport Literal, { Data, Signal } from '../module.js';\n\n/**\nA `literal-html` template may be placed anywhere in your HTML. It is designed to\nmake it easy to mix islands of dynamically rendered content into static content.\n\nA `literal-html` template is replaced in the DOM with it's own rendered content.\n\n@element <template is=\"literal-html\">\n\n@attribute {string} src\nA path to a `.js` module or JSON file of data to be rendered.\n\n```html\n<template is=\"literal-html\" src=\"./data.js\">...</template>\n<template is=\"literal-html\" src=\"./data.json\">...</template>\n```\n\n@attribute {string} consts\nA list of property names of `data` made accessible as constants inside a\ntemplate.\n\n```html\n<template is=\"literal-html\" src=\"./data.js\" const=\"\"></template>\n```\n\n@attribute {string} data-*\nWhere a `src` attribute is not present the template's `data` object is read from\n`data-*` attributes.\n\n@property {string} src\nA path to a `.js` module or JSON file of data to be rendered.\n\n```html\n<template is=\"literal-html\" src=\"./data.js\">...</template>\n<template is=\"literal-html\" src=\"./data.json\">...</template>\n```\n\n@property {object} data\nData object rendered by the template. Getting the `data` property returns the\nobservable data proxy of the data object currently being rendered. Changes to\nthis data are rendered in the DOM on the next animation frame.\n**/\n\n// Note that templates declared as shadow roots with the `shadowrootmode=\"open\"` or\n// `shadowrootmode=\"closed\"` attribute cannot also be `is=\"literal-html\"` templates:\n// the HTML parser picks them up and treats them as shadows before the custom\n// element registry can upgrade them: they cannot be enhanced, sadly.\n\nlet supportsCustomisedBuiltIn = false;\n\n\n// We define custom element as a mixin so that it can be applied both to the\n// real element constructor and, in Safari, where customised built-ins are not\n// supported, detected template elements.\n\nclass Element extends id {\n    #connected;\n    #promise;\n    #template;\n    #renderer;\n    #src;\n    #debug;\n\n    constructor(element) {\n        // Flag support for customised bui;t-ins\n        supportsCustomisedBuiltIn = true;\n        // Instantiate <template>\n        super(element);\n        // Make a template object from this template element\n        this.#template = Template.fromTemplate(this);\n        // Debug info for printError()\n        if (window.DEBUG) {\n            this.#debug = { code: `<template is=\"literal-html\" id=\"${ this.id }\">` };\n        }\n    }\n\n    get data() {\n        return this.#renderer && this.#renderer.data;\n    }\n\n    set data(object) {\n        const template = this.#template;\n\n        if (this.#renderer) this.#renderer.remove();\n        if (!object) return;\n\n        this.#renderer = new Literal(template, object, { element: this.parentElement });\n        this.replaceWith(this.#renderer.fragment);\n    }\n\n    get src() {\n        return this.#src;\n    }\n\n    set src(url) {\n        this.#src = url;\n\n        // Cancel existing promise of data\n        if (this.#promise) {\n            this.#promise.cancelled = true;\n            this.#promise = undefined;\n        }\n\n        // Set state.promise\n        const p = requestData(url)\n        .then((data) => { if (!p.cancelled) this.data = data; })\n        .catch((error) => this.replaceWith(printError(this.#debug, error)));\n\n        this.#promise = p;\n    }\n\n    connectedCallback() {\n        const promise  = this.#promise;\n        const renderer = this.#renderer;\n\n        // If src or data was not set use data found in dataset\n        if (!this.#connected && !promise && !renderer) {\n            this.#connected = true;\n            this.data = assignDataset({}, this.dataset);\n        }\n    }\n\n    attributeChangedCallback(name, old, url) {\n        if (name === 'src') this.src = url;\n    }\n\n    static observedAttributes = ['src'];\n}\n\n\n// Get properties from Element mixin prototype\nconst properties = Object.getOwnPropertyDescriptors(Element.prototype);\ndelete properties.constructor;\n\n\n// Export the element\nexport default class LiteralTemplateElement extends HTMLTemplateElement {\n    constructor() {\n        super();\n        new Element(this);\n    }\n\n    static observedAttributes = Element.observedAttributes;\n}\n\nObject.defineProperties(LiteralTemplateElement.prototype, properties);\n\n\n// Register the element\nif (window.DEBUG) console.log('%c<template is=\"literal-html\">%c registered', 'color:#3a8ab0;font-weight:600;', 'color:#888888;font-weight:400;');\nwindow.customElements.define('literal-html', LiteralTemplateElement, { extends: 'template' });\n\n\n// Safari support\n\nif (!supportsCustomisedBuiltIn) {\n    // It may be there were none in the DOM when the customised element was\n    // defined, in which case we must run a test.\n    const div = document.createElement('div');\n    div.style.position = 'fixed';\n    div.style.left = '-1000px';\n    div.style.top  = '-1000px';\n    div.innerHTML = '<template is=\"literal-html\"></template>';\n    document.body.append(div);\n    div.remove();\n}\n\nif (!supportsCustomisedBuiltIn) {\n    // it would appear there really is no support for customised built-ins.\n    console.warn('Browser does not support customised built-in elements, polyfilling <template is=\"literal-html\">');\n\n    function upgradeElement(element) {\n        const names = ['src', 'data'];\n        const store = {};\n\n        // Store values of property we are about to define\n        names.forEach((key, i) => {\n            if (element[key] !== undefined) store[key] = element[key];\n        });\n\n        // Define properties\n        Object.defineProperties(element, properties);\n\n        // Run constructor\n        new Element(element);\n\n        // Set properties\n        Object.assign(element, store);\n\n        // Detect and run src attribute\n        const src = element.getAttribute('src');\n        if (src) element.attributeChangedCallback('src', null, src);\n\n        // Run connected callback\n        element.connectedCallback();\n    }\n\n    function isNotUpgraded(element) {\n        return !element.connectedCallback;\n    }\n\n    function upgrade(root) {\n        Array\n        .from(root.querySelectorAll('[is=\"literal-html\"]'))\n        .filter(isNotUpgraded)\n        .forEach(upgradeElement);\n    }\n\n    function polyfillByRoot(root) {\n        upgrade(root);\n        const observer = new MutationObserver((records) => records\n            .flatMap((record) => record.addedNodes)\n            .filter((node) => node.nodeType === 1)\n            .forEach((element) => element.matches('[is=\"literal-html\"]') ?\n                upgradeElement(element) :\n                upgrade(element)\n            )\n        );\n        observer.observe(root, { childList: true, subtree: true });\n    }\n\n    // Expose on element for use in shadow DOMs\n    Element.polyfillByRoot = polyfillByRoot;\n\n    // Run on document automatically\n    polyfillByRoot(document);\n}\nelse {\n    Element.polyfillByRoot = noop;\n}\n\n\n\n\nexport { Literal, Data, Signal };\n"],
  "mappings": "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",
  "names": ["parseData", "value", "assignDataset", "object", "dataset", "keys", "i", "cacheByKey", "fn", "map", "input", "rextension", "empty", "request", "overload", "url", "cacheByKey", "src", "name", "get_default", "response", "requestData", "path", "rewriteURL", "supportsCustomisedBuiltIn", "Element", "id", "#connected", "#promise", "#template", "#renderer", "#src", "#debug", "element", "Template", "object", "template", "Literal", "url", "p", "requestData", "data", "error", "printError", "promise", "renderer", "assignDataset", "name", "old", "properties", "LiteralTemplateElement", "div", "noop", "upgradeElement", "names", "store", "key", "i", "src", "isNotUpgraded", "upgrade", "root", "polyfillByRoot", "records", "record", "node"]
}
