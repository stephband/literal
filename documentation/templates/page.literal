
${ data
.slice(0, 1)
.map((doc) => `
<header class="x1 4x @3-x2 x-stretch">
    <h1 class="docs-text-01" id="${ slugify(doc.name) }"><code>&lt;${ doc.name }&gt;</code></h1>
</header>

<section class="x1 4x @3-x2 x-stretch y-start documentation-block block">
    ${ doc.body }
</section>
`) }

<div class="@0-x1 @0-3x @1-x3 @1-2x @2-x3 @2-3x @0-x-stretch @0-y-start">
    ${ this.attributes = data.filter((doc) => doc.type === 'attribute'), '' }
    ${ this.attributes.length ? '<h3 class="doctext-03">Attributes</h3>' : '' }
    ${ Promise.all(this.attributes.map((doc) => include("./entry.literal", doc))).then((array) => array.join('')) }

    ${ this.properties = data.filter((doc) => doc.type === 'property'), '' }
    ${ this.properties.length ? '<h3 class="doctext-03">Properties</h3>' : '' }
    ${ Promise.all(this.properties.map((doc) => include("./entry.literal", doc))).then((array) => array.join(''))  }

    ${ this.methods = data.filter((doc) => doc.type === 'method'), '' }
    ${ this.methods.length ? '<h3 class="doctext-03">Methods</h3>' : '' }
    ${ Promise.all(this.methods.map((doc) => include("./entry.literal", doc))).then((array) => array.join(''))  }

    ${ this.events = data.filter((doc) => doc.type === 'event'), '' }
    ${ this.events.length ? '<h3 class="doctext-03">Events</h3>' : '' }
    ${ Promise.all(this.events.map((doc) => include("./entry.literal", doc))).then((array) => array.join(''))  }
</div>

<div class="@-x1 @0-3x @1-x5 @1-2x @2-x6 @2-3x @0-x-stretch @0-y-start">
    ${ this.parts = data.filter((doc) => doc.type === 'part'), '' }
    ${ this.parts.length ? '<h3 class="doctext-03">Parts</h3>' : '' }
    ${ Promise.all(this.parts.map((doc) => include("./entry.literal", doc))).then((array) => array.join(''))  }

    ${ this.vars = data.filter((doc) => doc.type === 'var'), '' }
    ${ this.vars.length ? '<h3 class="doctext-03">Variables</h3>' : '' }
    ${ Promise.all(this.vars.map((doc) => include("./entry.literal", doc))).then((array) => array.join(''))  }

    ${ this.slots = data.filter((doc) => doc.type === 'slot'), '' }
    ${ this.slots.length ? '<h3 class="doctext-03">Slots</h3>' : '' }
    ${ Promise.all(this.slots.map((doc) => include("./entry.literal", doc))).then((array) => array.join(''))  }
</div>

