
<!DOCTYPE html>
<html lang="en">
<head>
    ${ include("../../documentation/templates/head.literal", "../../package.json") }

    <link rel="stylesheet" href="../../literal-include.css" />
</head>

<body class="4x-grid @1-6x-grid @2-7x-grid @3-9x-grid grid">
    <header class="@0-x3" style="grid-column-end: span 4;">
        <h1 class="text-01">Literal <span class="text-06">0.6.2</span></h1>
    </header>

    ${ include('../../documentation/templates/section.literal', (await comments(
        '../../modules/to-text.js'
    ))) }

    <section class="block @0-x1 @0-3x @1-x3 @1-4x @2-x3 @0-x-stretch">
        <h2 class="text-02">Template objects</h2>

        <p>Templates are rendered in a scope that provides several useful
        objects. The most important object is the <code>data</code> object,
        which contains data to render and is observed for mutations that
        trigger incremental parts of the template to rerender.</p>

        ${ (await comments(
            '../../modules/renderer.js',
            '../../modules/define-element.js',
            '../../../fn/modules/nothing.js',
        ))
        .filter((doc) => (doc.type === 'selector'))
        //.sort(by(get('name')))
        .map((doc) => include('../../documentation/templates/entry.literal', doc)) }

        <br/>

        <h2 class="text-02">Template functions</h2>

        <p>Template scope also contains a library of functions. Some of these
        are simply standard JavaScript functions aliased for brevity. Others
        provide ways to <a href="#function-include">include</a> templates,
        create streams of data from DOM <a href="#function-events">events</a>,
        and <a href="#function-overload">overload</a> functions.</p>

        ${ (await comments(
            '../../modules/library.js',
            '../../../fn/modules/by.js',
            '../../../fn/modules/clamp.js',
            '../../../fn/modules/equals.js',
            '../../../fn/modules/id.js',
            '../../../fn/modules/last.js',
            '../../../fn/modules/matches.js',
            '../../../fn/modules/noop.js',
            '../../../fn/modules/nothing.js',
            '../../../fn/modules/overload.js',
            '../../../fn/modules/slugify.js',
            '../../../fn/modules/sum.js',
            //'../../fn/observer/observe.js',
            '../../../dom/modules/delegate.js',
            '../../../dom/modules/events.js',
            '../../../dom/modules/trigger.js',
            '../../modules/library-dom.js',
            '../../modules/library/include.js',
            '../../modules/library/paramify.js',
            '../../modules/library/print.js'
        ))
        .filter((doc) => (doc.type === 'function' || doc.type === 'constructor'))
        .sort(by(get('name')))
        .map((doc) => include('../../documentation/templates/entry.literal', doc)) }

        ${ (await comments(
            '../../../dom/modules/parse-length.js'
        ))
        .filter((doc) => (doc.type === 'function' || doc.type === 'constructor'))
        .map((doc) => include('../../documentation/templates/entry.literal', doc)) }

        <h3>Adding functions to the template scope</h3>

        <p>The scope is extensible. You may assign your own objects and functions.
        This must be done before templates are compiled and cached.</p>
    </section>

    ${ include("../../documentation/templates/nav.literal", "../../package.json") }
    ${ include('../../documentation/templates/credit.literal', '../../package.json') }
    ${ include('../../documentation/templates/footer.literal', '../../package.json') }
    ${ include('../../documentation/templates/scripts.literal', '../../package.json') }

    <script type="module">
        import '../../module.js';
        import '../../literal-include.js';
    </script>
</body>
